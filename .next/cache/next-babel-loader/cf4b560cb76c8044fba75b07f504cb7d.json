{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Documents/fakewebsite/src/components/Newsletter.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport SectionButton from \"components/SectionButton\";\nimport newsletter from \"util/newsletter.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Newsletter(props) {\n  _s();\n\n  const {\n    0: subscribed,\n    1: setSubscribed\n  } = useState(false);\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = ({\n    email\n  }) => {\n    setSubscribed(true); // Parent component can optionally\n    // find out when subscribed.\n\n    props.onSubscribed && props.onSubscribed(); // Subscribe them\n\n    newsletter.subscribe({\n      email\n    });\n  };\n\n  return __jsx(React.Fragment, null, subscribed === false && __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"field is-grouped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"control is-expanded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: `input is-${props.size}`,\n    name: \"email\",\n    type: \"email\",\n    placeholder: props.inputPlaceholder,\n    ref: register({\n      required: \"Please enter an email address\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(SectionButton, {\n    parentColor: props.parentColor,\n    size: props.size,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, props.buttonText))), errors.email && __jsx(\"p\", {\n    className: \"help is-danger has-text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, errors.email.message)), subscribed === true && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 31\n    }\n  }, props.subscribedMessage));\n}\n\n_s(Newsletter, \"pYKMtDnVPyQov/Np0G04mhnQUf0=\", false, function () {\n  return [useForm];\n});\n\n_c = Newsletter;\nexport default Newsletter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newsletter\");","map":{"version":3,"sources":["/Users/luke/Documents/fakewebsite/src/components/Newsletter.js"],"names":["React","useState","SectionButton","newsletter","useForm","Newsletter","props","subscribed","setSubscribed","handleSubmit","register","errors","onSubmit","email","onSubscribed","subscribe","size","inputPlaceholder","required","parentColor","buttonText","message","subscribedMessage"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAEQ,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCP,OAAO,EAAlD;;AAEA,QAAMQ,QAAQ,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAe;AAC9BL,IAAAA,aAAa,CAAC,IAAD,CAAb,CAD8B,CAE9B;AACA;;AACAF,IAAAA,KAAK,CAACQ,YAAN,IAAsBR,KAAK,CAACQ,YAAN,EAAtB,CAJ8B,CAK9B;;AACAX,IAAAA,UAAU,CAACY,SAAX,CAAqB;AAAEF,MAAAA;AAAF,KAArB;AACD,GAPD;;AASA,SACE,4BACGN,UAAU,KAAK,KAAf,IACC;AAAM,IAAA,QAAQ,EAAEE,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAG,YAAWN,KAAK,CAACU,IAAK,EADpC;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,WAAW,EAAEV,KAAK,CAACW,gBAJrB;AAKE,IAAA,GAAG,EAAEP,QAAQ,CAAC;AACZQ,MAAAA,QAAQ,EAAE;AADE,KAAD,CALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAYE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,WAAW,EAAEZ,KAAK,CAACa,WADrB;AAEE,IAAA,IAAI,EAAEb,KAAK,CAACU,IAFd;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGV,KAAK,CAACc,UALT,CADF,CAZF,CADF,EAwBGT,MAAM,CAACE,KAAP,IACC;AAAG,IAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACE,KAAP,CAAaQ,OADhB,CAzBJ,CAFJ,EAkCGd,UAAU,KAAK,IAAf,IAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,KAAK,CAACgB,iBAAZ,CAlC1B,CADF;AAsCD;;GAnDQjB,U;UAEoCD,O;;;KAFpCC,U;AAqDT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport SectionButton from \"components/SectionButton\";\nimport newsletter from \"util/newsletter.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Newsletter(props) {\n  const [subscribed, setSubscribed] = useState(false);\n  const { handleSubmit, register, errors } = useForm();\n\n  const onSubmit = ({ email }) => {\n    setSubscribed(true);\n    // Parent component can optionally\n    // find out when subscribed.\n    props.onSubscribed && props.onSubscribed();\n    // Subscribe them\n    newsletter.subscribe({ email });\n  };\n\n  return (\n    <>\n      {subscribed === false && (\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"field is-grouped\">\n            <div className=\"control is-expanded\">\n              <input\n                className={`input is-${props.size}`}\n                name=\"email\"\n                type=\"email\"\n                placeholder={props.inputPlaceholder}\n                ref={register({\n                  required: \"Please enter an email address\",\n                })}\n              ></input>\n            </div>\n            <div className=\"control\">\n              <SectionButton\n                parentColor={props.parentColor}\n                size={props.size}\n                type=\"submit\"\n              >\n                {props.buttonText}\n              </SectionButton>\n            </div>\n          </div>\n\n          {errors.email && (\n            <p className=\"help is-danger has-text-left\">\n              {errors.email.message}\n            </p>\n          )}\n        </form>\n      )}\n\n      {subscribed === true && <div>{props.subscribedMessage}</div>}\n    </>\n  );\n}\n\nexport default Newsletter;\n"]},"metadata":{},"sourceType":"module"}