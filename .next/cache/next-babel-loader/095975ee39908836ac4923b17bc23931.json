{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Documents/fakewebsite/src/util/auth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, createContext } from \"react\";\n/*\n  This file (auth.js) is added to your codebase if you chose \"None\" for your\n  auth provider when exporting from Divjoy, but some of you components attempt \n  to import auth.js and use the useAuth() hook. Rather than break your site, \n  we include this file and just just throw errors when auth methods (auth.signup, auth.signin, etc) are used. \n  To entirely remove auth from your codebase search for \"auth\" and remove all related code.\n*/\n\nconst authContext = createContext();\nexport function ProvideAuth({\n  children\n}) {\n  _s();\n\n  const auth = useProvideAuth();\n  return __jsx(authContext.Provider, {\n    value: auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, children);\n}\n\n_s(ProvideAuth, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = ProvideAuth;\nexport const useAuth = () => {\n  _s2();\n\n  return useContext(authContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst errorMessage = `Authentication is disabled because you chose \"None\" when picking an authentication option in Divjoy. Please go to the Divjoy homepage and choose an option or choose \"Other\" if you'd like to integrate a different auth service after code export.`;\n\nconst errorFunction = () => Promise.reject(new Error(errorMessage));\n\nfunction useProvideAuth() {\n  return {\n    user: false,\n    signup: errorFunction,\n    signin: errorFunction,\n    signinWithProvider: errorFunction,\n    signout: errorFunction,\n    sendPasswordResetEmail: errorFunction,\n    confirmPasswordReset: errorFunction,\n    updateEmail: errorFunction,\n    updatePassword: errorFunction\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProvideAuth\");","map":{"version":3,"sources":["/Users/luke/Documents/fakewebsite/src/util/auth.js"],"names":["React","useContext","createContext","authContext","ProvideAuth","children","auth","useProvideAuth","useAuth","errorMessage","errorFunction","Promise","reject","Error","user","signup","signin","signinWithProvider","signout","sendPasswordResetEmail","confirmPasswordReset","updateEmail","updatePassword"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA;;;;;;;;AAQA,MAAMC,WAAW,GAAGD,aAAa,EAAjC;AAEA,OAAO,SAASE,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AAAA;;AACxC,QAAMC,IAAI,GAAGC,cAAc,EAA3B;AACA,SAAO,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCD,QAApC,CAAP;AACD;;GAHeD,W;UACDG,c;;;KADCH,W;AAKhB,OAAO,MAAMI,OAAO,GAAG,MAAM;AAAA;;AAC3B,SAAOP,UAAU,CAACE,WAAD,CAAjB;AACD,CAFM;;IAAMK,O;;AAIb,MAAMC,YAAY,GAAI,qPAAtB;;AACA,MAAMC,aAAa,GAAG,MAAMC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAUJ,YAAV,CAAf,CAA5B;;AAEA,SAASF,cAAT,GAA0B;AACxB,SAAO;AACLO,IAAAA,IAAI,EAAE,KADD;AAELC,IAAAA,MAAM,EAAEL,aAFH;AAGLM,IAAAA,MAAM,EAAEN,aAHH;AAILO,IAAAA,kBAAkB,EAAEP,aAJf;AAKLQ,IAAAA,OAAO,EAAER,aALJ;AAMLS,IAAAA,sBAAsB,EAAET,aANnB;AAOLU,IAAAA,oBAAoB,EAAEV,aAPjB;AAQLW,IAAAA,WAAW,EAAEX,aARR;AASLY,IAAAA,cAAc,EAAEZ;AATX,GAAP;AAWD","sourcesContent":["import React, { useContext, createContext } from \"react\";\n\n/*\n  This file (auth.js) is added to your codebase if you chose \"None\" for your\n  auth provider when exporting from Divjoy, but some of you components attempt \n  to import auth.js and use the useAuth() hook. Rather than break your site, \n  we include this file and just just throw errors when auth methods (auth.signup, auth.signin, etc) are used. \n  To entirely remove auth from your codebase search for \"auth\" and remove all related code.\n*/\n\nconst authContext = createContext();\n\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\nconst errorMessage = `Authentication is disabled because you chose \"None\" when picking an authentication option in Divjoy. Please go to the Divjoy homepage and choose an option or choose \"Other\" if you'd like to integrate a different auth service after code export.`;\nconst errorFunction = () => Promise.reject(new Error(errorMessage));\n\nfunction useProvideAuth() {\n  return {\n    user: false,\n    signup: errorFunction,\n    signin: errorFunction,\n    signinWithProvider: errorFunction,\n    signout: errorFunction,\n    sendPasswordResetEmail: errorFunction,\n    confirmPasswordReset: errorFunction,\n    updateEmail: errorFunction,\n    updatePassword: errorFunction,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}